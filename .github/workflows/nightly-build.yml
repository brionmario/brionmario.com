# This workflow will run at 12.00 every night and will commit the changes to the `nightly` branch.

name: 🌛 Nightly Build

on:
  schedule:
    - cron: "00 12 * * *"
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  build:
    name: 🚧 Build
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [lts/*]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⬇️ Checkout
        id: checkout
        uses: actions/checkout@v2.3.3
        with:
          ref: "nightly"
          fetch-depth: 0

      - name: 🟢 Setup node
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🥡 Setup pnpm
        id: setup-pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: latest
          run_install: false

      - name: 🎈 Get pnpm store directory
        id: get-pnpm-cache-dir
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: 🔆 Cache pnpm modules
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: ${{ steps.get-pnpm-cache-dir.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 🧩 Install Dependencies
        id: install-dependencies
        run: pnpm install

      - name: 🦄 Lint All Files
        id: lint-with-eslint
        run: pnpm lint

      - name: 🃏 Run Jest & Collect Coverage
        id: run-jest-test-and-coverage
        run: pnpm test

      - name: 🏗️ Build
        id: build-the-mono-repo
        run: |
          cd app

          # Set ENV
          touch .env.local
          echo "NEXT_PUBLIC_ENVIRONMENT='PROD'" >> .env.local
          echo "MAINTENANCE_MODE='false'" >> .env.local
          echo "NEXT_PUBLIC_GTM_CONTAINER_ID='${{secrets.GTM_CONTAINER_ID}}'" >> .env.local
          echo "SITE_URL='https://brionmario.com'" >> .env.local

          cd ..
          pnpm build

          # SEO work
          cd app
          pnpm generate:site-map

  seed:
    name: 🌳 Run Data Seeder
    timeout-minutes: 15
    needs: [build]
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [lts/*]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⬇️ Checkout
        id: checkout
        uses: actions/checkout@v2.3.3
        with:
          ref: "nightly"
          fetch-depth: 0

      - name: Merge dev001 -> nightly
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: dev-001
          target_branch: nightly
          github_token: ${{ env.GITHUB_TOKEN }}

      - name: 🟢 Setup node
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🥡 Setup pnpm
        id: setup-pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: latest
          run_install: false

      - name: 🎈 Get pnpm store directory
        id: get-pnpm-cache-dir
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: 🔆 Cache pnpm modules
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: ${{ steps.get-pnpm-cache-dir.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 🧩 Install Dependencies
        id: install-dependencies
        run: pnpm install

      - name: 🦄 Lint All Files
        id: lint-with-eslint
        run: pnpm lint

      - name: 🃏 Run Data Seeder
        id: run-data-seeder
        working-directory: app/scripts
        run: |
          node dataseedr.js --token=${{ env.GITHUB_TOKEN }}

      - name: 🐤 Commit changes
        id: commit
        uses: EndBug/add-and-commit@v9
        with:
          pull: "--rebase --autostash"
          default_author: github_actions
          message: "chore(data): update data from ${{github.workflow}} #${{github.run_id}}"
          add: "."
